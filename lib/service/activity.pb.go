// Code generated by protoc-gen-go. DO NOT EDIT.
// source: activity.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Activity struct {
	Id                   int64    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Wid                  int64    `protobuf:"varint,2,opt,name=Wid,proto3" json:"Wid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	ActivityType         int32    `protobuf:"varint,5,opt,name=ActivityType,proto3" json:"ActivityType,omitempty"`
	RelativeId           int64    `protobuf:"varint,6,opt,name=RelativeId,proto3" json:"RelativeId,omitempty"`
	Extra                string   `protobuf:"bytes,7,opt,name=Extra,proto3" json:"Extra,omitempty"`
	TimeStarted          int64    `protobuf:"varint,8,opt,name=TimeStarted,proto3" json:"TimeStarted,omitempty"`
	TimeEnd              int64    `protobuf:"varint,9,opt,name=TimeEnd,proto3" json:"TimeEnd,omitempty"`
	CreatedAt            int64    `protobuf:"varint,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt            int64    `protobuf:"varint,11,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Activity) Reset()         { *m = Activity{} }
func (m *Activity) String() string { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()    {}
func (*Activity) Descriptor() ([]byte, []int) {
	return fileDescriptor_a684c9a0549e7832, []int{0}
}

func (m *Activity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Activity.Unmarshal(m, b)
}
func (m *Activity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Activity.Marshal(b, m, deterministic)
}
func (m *Activity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activity.Merge(m, src)
}
func (m *Activity) XXX_Size() int {
	return xxx_messageInfo_Activity.Size(m)
}
func (m *Activity) XXX_DiscardUnknown() {
	xxx_messageInfo_Activity.DiscardUnknown(m)
}

var xxx_messageInfo_Activity proto.InternalMessageInfo

func (m *Activity) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Activity) GetWid() int64 {
	if m != nil {
		return m.Wid
	}
	return 0
}

func (m *Activity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Activity) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Activity) GetActivityType() int32 {
	if m != nil {
		return m.ActivityType
	}
	return 0
}

func (m *Activity) GetRelativeId() int64 {
	if m != nil {
		return m.RelativeId
	}
	return 0
}

func (m *Activity) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *Activity) GetTimeStarted() int64 {
	if m != nil {
		return m.TimeStarted
	}
	return 0
}

func (m *Activity) GetTimeEnd() int64 {
	if m != nil {
		return m.TimeEnd
	}
	return 0
}

func (m *Activity) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Activity) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type ActivityResponse struct {
	Boolean              bool     `protobuf:"varint,1,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityResponse) Reset()         { *m = ActivityResponse{} }
func (m *ActivityResponse) String() string { return proto.CompactTextString(m) }
func (*ActivityResponse) ProtoMessage()    {}
func (*ActivityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a684c9a0549e7832, []int{1}
}

func (m *ActivityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityResponse.Unmarshal(m, b)
}
func (m *ActivityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityResponse.Marshal(b, m, deterministic)
}
func (m *ActivityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityResponse.Merge(m, src)
}
func (m *ActivityResponse) XXX_Size() int {
	return xxx_messageInfo_ActivityResponse.Size(m)
}
func (m *ActivityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityResponse proto.InternalMessageInfo

func (m *ActivityResponse) GetBoolean() bool {
	if m != nil {
		return m.Boolean
	}
	return false
}

func (m *ActivityResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ActivityQuery struct {
	Index                int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	TimeStarted          int64    `protobuf:"varint,2,opt,name=TimeStarted,proto3" json:"TimeStarted,omitempty"`
	TimeEnd              int64    `protobuf:"varint,3,opt,name=TimeEnd,proto3" json:"TimeEnd,omitempty"`
	ActivityType         int64    `protobuf:"varint,4,opt,name=ActivityType,proto3" json:"ActivityType,omitempty"`
	RelativeId           int64    `protobuf:"varint,5,opt,name=RelativeId,proto3" json:"RelativeId,omitempty"`
	Limit                int64    `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Wid                  int64    `protobuf:"varint,7,opt,name=wid,proto3" json:"wid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivityQuery) Reset()         { *m = ActivityQuery{} }
func (m *ActivityQuery) String() string { return proto.CompactTextString(m) }
func (*ActivityQuery) ProtoMessage()    {}
func (*ActivityQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_a684c9a0549e7832, []int{2}
}

func (m *ActivityQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivityQuery.Unmarshal(m, b)
}
func (m *ActivityQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivityQuery.Marshal(b, m, deterministic)
}
func (m *ActivityQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivityQuery.Merge(m, src)
}
func (m *ActivityQuery) XXX_Size() int {
	return xxx_messageInfo_ActivityQuery.Size(m)
}
func (m *ActivityQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivityQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ActivityQuery proto.InternalMessageInfo

func (m *ActivityQuery) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ActivityQuery) GetTimeStarted() int64 {
	if m != nil {
		return m.TimeStarted
	}
	return 0
}

func (m *ActivityQuery) GetTimeEnd() int64 {
	if m != nil {
		return m.TimeEnd
	}
	return 0
}

func (m *ActivityQuery) GetActivityType() int64 {
	if m != nil {
		return m.ActivityType
	}
	return 0
}

func (m *ActivityQuery) GetRelativeId() int64 {
	if m != nil {
		return m.RelativeId
	}
	return 0
}

func (m *ActivityQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ActivityQuery) GetWid() int64 {
	if m != nil {
		return m.Wid
	}
	return 0
}

type Activitylist struct {
	Total                int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Pagesize             int64       `protobuf:"varint,2,opt,name=pagesize,proto3" json:"pagesize,omitempty"`
	Activities           []*Activity `protobuf:"bytes,3,rep,name=activities,proto3" json:"activities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Activitylist) Reset()         { *m = Activitylist{} }
func (m *Activitylist) String() string { return proto.CompactTextString(m) }
func (*Activitylist) ProtoMessage()    {}
func (*Activitylist) Descriptor() ([]byte, []int) {
	return fileDescriptor_a684c9a0549e7832, []int{3}
}

func (m *Activitylist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Activitylist.Unmarshal(m, b)
}
func (m *Activitylist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Activitylist.Marshal(b, m, deterministic)
}
func (m *Activitylist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Activitylist.Merge(m, src)
}
func (m *Activitylist) XXX_Size() int {
	return xxx_messageInfo_Activitylist.Size(m)
}
func (m *Activitylist) XXX_DiscardUnknown() {
	xxx_messageInfo_Activitylist.DiscardUnknown(m)
}

var xxx_messageInfo_Activitylist proto.InternalMessageInfo

func (m *Activitylist) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Activitylist) GetPagesize() int64 {
	if m != nil {
		return m.Pagesize
	}
	return 0
}

func (m *Activitylist) GetActivities() []*Activity {
	if m != nil {
		return m.Activities
	}
	return nil
}

func init() {
	proto.RegisterType((*Activity)(nil), "service.Activity")
	proto.RegisterType((*ActivityResponse)(nil), "service.ActivityResponse")
	proto.RegisterType((*ActivityQuery)(nil), "service.ActivityQuery")
	proto.RegisterType((*Activitylist)(nil), "service.Activitylist")
}

func init() { proto.RegisterFile("activity.proto", fileDescriptor_a684c9a0549e7832) }

var fileDescriptor_a684c9a0549e7832 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0xdd, 0x7c, 0x4d, 0x32, 0x35, 0xba, 0xae, 0x85, 0x4a, 0x33, 0x88, 0x84, 0x9c, 0x72, 0x1a,
	0xdc, 0xf5, 0xe0, 0xc5, 0xcb, 0xaa, 0x8b, 0x04, 0x44, 0x30, 0xbb, 0xe2, 0xb9, 0x77, 0xba, 0x90,
	0x86, 0x4c, 0x12, 0xd2, 0xed, 0xb8, 0xf1, 0x07, 0x79, 0xf5, 0x97, 0xf8, 0x9f, 0xa4, 0x3b, 0x1f,
	0x3b, 0x33, 0x91, 0xc1, 0x5b, 0xbd, 0xf7, 0x52, 0x5d, 0xfd, 0x5e, 0x57, 0xe0, 0x94, 0xaf, 0xb5,
	0xdc, 0x4a, 0xdd, 0xae, 0xea, 0xa6, 0xd2, 0x15, 0x86, 0x8a, 0x9a, 0xad, 0x5c, 0x53, 0xf2, 0xcb,
	0x85, 0xe8, 0xb2, 0xd7, 0xf0, 0x14, 0xdc, 0x4c, 0x30, 0x27, 0x76, 0x52, 0x2f, 0x77, 0x33, 0x81,
	0x67, 0xe0, 0x7d, 0x95, 0x82, 0xb9, 0x96, 0x30, 0x25, 0x22, 0xf8, 0x9f, 0xf8, 0x86, 0x98, 0x17,
	0x3b, 0xe9, 0x3c, 0xb7, 0xb5, 0xe1, 0xde, 0x93, 0x5a, 0x33, 0xbf, 0xe3, 0x4c, 0x8d, 0x09, 0x3c,
	0x18, 0x4e, 0xbd, 0x69, 0x6b, 0x62, 0x41, 0xec, 0xa4, 0x41, 0xbe, 0xc7, 0xe1, 0x0b, 0x80, 0x9c,
	0x0a, 0xae, 0xe5, 0x96, 0x32, 0xc1, 0x66, 0x76, 0xc8, 0x0e, 0x83, 0x4f, 0x20, 0xb8, 0xba, 0xd3,
	0x0d, 0x67, 0xa1, 0x3d, 0xb8, 0x03, 0x18, 0xc3, 0xe2, 0x46, 0x6e, 0xe8, 0x5a, 0xf3, 0x46, 0x93,
	0x60, 0x91, 0x6d, 0xdb, 0xa5, 0x90, 0x41, 0x68, 0xe0, 0x55, 0x29, 0xd8, 0xdc, 0xaa, 0x03, 0xc4,
	0xe7, 0x30, 0x7f, 0xd7, 0x10, 0xd7, 0x24, 0x2e, 0x35, 0x03, 0xab, 0xdd, 0x13, 0x46, 0xfd, 0x52,
	0x8b, 0x5e, 0x5d, 0x74, 0xea, 0x48, 0x24, 0x6f, 0xe0, 0x6c, 0xb8, 0x7d, 0x4e, 0xaa, 0xae, 0x4a,
	0x45, 0x66, 0xd2, 0x6d, 0x55, 0x15, 0xc4, 0x4b, 0x1b, 0x5a, 0x94, 0x0f, 0xd0, 0x24, 0x39, 0x06,
	0xe7, 0x4a, 0x91, 0xfc, 0x71, 0xe0, 0xe1, 0xd0, 0xfe, 0xf9, 0x3b, 0x35, 0xad, 0x71, 0x27, 0x4b,
	0x41, 0x77, 0x7d, 0xdc, 0x1d, 0x38, 0x74, 0xe7, 0x1e, 0x75, 0xe7, 0xed, 0xbb, 0x3b, 0xcc, 0xdc,
	0xb7, 0xf2, 0xb1, 0xcc, 0x83, 0x7f, 0x65, 0x5e, 0xc8, 0x8d, 0xd4, 0xfd, 0x73, 0x74, 0xc0, 0xec,
	0xc1, 0x0f, 0x29, 0xec, 0x3b, 0x78, 0xb9, 0x29, 0x13, 0x75, 0x3f, 0xab, 0x90, 0x4a, 0x9b, 0x3e,
	0x5d, 0x69, 0x5e, 0x0c, 0x6e, 0x2c, 0xc0, 0x25, 0x44, 0x35, 0xff, 0x46, 0x4a, 0xfe, 0xa4, 0xde,
	0xca, 0x88, 0xf1, 0x1c, 0xa0, 0xdf, 0x49, 0x49, 0x8a, 0x79, 0xb1, 0x97, 0x2e, 0x2e, 0x1e, 0xaf,
	0xfa, 0xb5, 0x5c, 0x8d, 0x51, 0xef, 0x7c, 0x74, 0xf1, 0xdb, 0x81, 0x47, 0x83, 0x70, 0xdd, 0x7d,
	0x88, 0xe7, 0x10, 0x7e, 0x20, 0xfd, 0xb6, 0xcd, 0x04, 0x4e, 0xbb, 0x97, 0x53, 0x2a, 0x39, 0xc1,
	0xd7, 0xe0, 0x7f, 0x34, 0x77, 0x7e, 0x36, 0x11, 0xed, 0xcb, 0x2c, 0x9f, 0x4e, 0x78, 0x63, 0x31,
	0x39, 0xc1, 0x97, 0x30, 0xcb, 0x4a, 0x45, 0x8d, 0xfe, 0xdf, 0x51, 0xb7, 0x33, 0xfb, 0xb7, 0xbd,
	0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x30, 0xa2, 0x29, 0x7f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActivityServiceClient is the client API for ActivityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActivityServiceClient interface {
	GetById(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error)
	List(ctx context.Context, in *ActivityQuery, opts ...grpc.CallOption) (*Activitylist, error)
	Insert(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error)
}

type activityServiceClient struct {
	cc *grpc.ClientConn
}

func NewActivityServiceClient(cc *grpc.ClientConn) ActivityServiceClient {
	return &activityServiceClient{cc}
}

func (c *activityServiceClient) GetById(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error) {
	out := new(Activity)
	err := c.cc.Invoke(ctx, "/service.ActivityService/GetById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) List(ctx context.Context, in *ActivityQuery, opts ...grpc.CallOption) (*Activitylist, error) {
	out := new(Activitylist)
	err := c.cc.Invoke(ctx, "/service.ActivityService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *activityServiceClient) Insert(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error) {
	out := new(Activity)
	err := c.cc.Invoke(ctx, "/service.ActivityService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActivityServiceServer is the server API for ActivityService service.
type ActivityServiceServer interface {
	GetById(context.Context, *Activity) (*Activity, error)
	List(context.Context, *ActivityQuery) (*Activitylist, error)
	Insert(context.Context, *Activity) (*Activity, error)
}

// UnimplementedActivityServiceServer can be embedded to have forward compatible implementations.
type UnimplementedActivityServiceServer struct {
}

func (*UnimplementedActivityServiceServer) GetById(ctx context.Context, req *Activity) (*Activity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetById not implemented")
}
func (*UnimplementedActivityServiceServer) List(ctx context.Context, req *ActivityQuery) (*Activitylist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedActivityServiceServer) Insert(ctx context.Context, req *Activity) (*Activity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}

func RegisterActivityServiceServer(s *grpc.Server, srv ActivityServiceServer) {
	s.RegisterService(&_ActivityService_serviceDesc, srv)
}

func _ActivityService_GetById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).GetById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ActivityService/GetById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).GetById(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivityQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ActivityService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).List(ctx, req.(*ActivityQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActivityService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Activity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActivityServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.ActivityService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActivityServiceServer).Insert(ctx, req.(*Activity))
	}
	return interceptor(ctx, in, info, handler)
}

var _ActivityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.ActivityService",
	HandlerType: (*ActivityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetById",
			Handler:    _ActivityService_GetById_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ActivityService_List_Handler,
		},
		{
			MethodName: "Insert",
			Handler:    _ActivityService_Insert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "activity.proto",
}
